openapi: 3.0.3
info:
  title: Account Service API Documentation
  description: Account Service API Documentation for Swagger Codegen
  version: 25.1.0
  contact:
    name: "Somukumar"
    email: "somukumar.ekambaram@gmail.com"

servers:
  - url: http://localhost:8081/AccountService
    description: Local server

tags:
  - name: SK-BANK-Accounts
    description: Everything about SK Bank Accounts

paths:
  /account:
    post:
      summary: API to create new account for customer
      operationId: createNewAccount
      tags:
        - SK-BANK-Accounts
      requestBody:
        description: Request body to create new account
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AccountRequest"
      responses:
        "201":
          description: 201 CREATED
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountResponse'
        "400":
          description: 400 BAD REQUEST
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestErrorResponse'
        "401":
          description: 401 UNAUTHORIZED
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorResponse'

        "500":
          description: 500 INTERNAL SERVER ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
    get:
      summary: API to fetch account details
      operationId: fetchAccountDetails
      tags:
        - SK-BANK-Accounts
      parameters:
        - in: query
          name: accountNumber
          required: true
          schema:
            type: string
      responses:
        "200":
          description: 200 OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountDetailsResponse'
        "400":
          description: 400 BAD REQUEST
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestErrorResponse'
        "401":
          description: 401 UNAUTHORIZED
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorResponse'

        "500":
          description: 500 INTERNAL SERVER ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'

  /account/upload-proof:
    put:
      operationId: uploadAccountProof
      summary: API to upload customer proof to activate the account
      tags:
        - SK-BANK-Accounts
      security:
        - bearerAuth: []
      requestBody:
        description: Request body to upload customer proof to activate the account
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountUploadProofRequest'
      responses:
        "200":
          description: 200 OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountUploadProofResponse'
        "400":
          description: 400 BAD REQUEST
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestErrorResponse'
        "401":
          description: 401 UNAUTHORIZED
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorResponse'

        "500":
          description: 500 INTERNAL SERVER ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'

  /account/security:
    put:
      operationId: updateAccountSecurity
      summary: API to storng the account's security
      tags:
        - SK-BANK-Accounts
      security:
        - bearerAuth: []
      requestBody:
        description: Request body to update account security to protect account
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountAuthentication'
      responses:
        "200":
          description: 200 OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountSecurityResponse'
        "400":
          description: 400 BAD REQUEST
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestErrorResponse'
        "401":
          description: 401 UNAUTHORIZED
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorResponse'

        "500":
          description: 500 INTERNAL SERVER ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'

  /account/login:
    post:
      operationId: loginAccount
      summary: API to authenticate and login customer account
      tags:
        - SK-BANK-Accounts

      requestBody:
        description: Request body to update account security to protect account
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountAuthentication'
      responses:
        "200":
          description: 200 OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountLoginResponse'
        "400":
          description: 400 BAD REQUEST
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestErrorResponse'
        "401":
          description: 401 UNAUTHORIZED
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorResponse'

        "500":
          description: 500 INTERNAL SERVER ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
  /account/balance/{accountNumber}:
    get:
      operationId: checkAccountBalance
      summary: API to fetch account balance
      tags:
        - SK-BANK-Accounts
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: accountNumber
          required: true
          schema:
            type: string
      responses:
        "200":
          description: 200 OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountBalanceResponse'
        "400":
          description: 400 BAD REQUEST
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestErrorResponse'
        "401":
          description: 401 UNAUTHORIZED
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorResponse'

        "500":
          description: 500 INTERNAL SERVER ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'

components:

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:

    SuccessResponse:
      type: object
      properties:
        success:
          type: boolean
          default: true
        data:
          type: object

    BadRequestErrorResponse:
      type: object
      properties:
        success:
          type: boolean
          default: false
        message:
          type: string
          default: Invalid Request

    UnauthorizedErrorResponse:
      type: object
      properties:
        success:
          type: boolean
          default: false
        message:
          type: string
          default: Unauthorized Request

    InternalServerErrorResponse:
      type: object
      properties:
        success:
          type: boolean
          default: false
        message:
          type: string
          default: Internal Server Error

    AccountRequest:
      type: object
      required:
        - lastName
        - dateOfBirth
        - mobileNumber
        - gender
        - branchName
        - accountType
        - customerAddress
      properties:
        firstName:
          type: string
        lastName:
          type: string
        dateOfBirth:
          type: string
          format: date
        mobileNumber:
          type: string
          maxLength: 10
          minLength: 10
        email:
          type: string
          format: email
        gender:
          $ref: '#/components/schemas/GenderEnum'
        branchName:
          type: string
        accountType:
          $ref: '#/components/schemas/AccountTypeEnum'
        customerAddress:
          $ref: '#/components/schemas/Address'

    AccountResponse:
      allOf:
        - $ref: '#/components/schemas/SuccessResponse'
        - properties:
            data:
              $ref: '#/components/schemas/AccountPayload'

    AccountPayload:
      type: object
      properties:
        accountNumber:
          type: string
        custId:
          type: integer
          format: int64
        accessToken:
          type: string

    Address:
      type: object
      required:
        - doorNo
        - addressLineOne
        - city
        - state
        - pinCode
        - usage
      properties:
        doorNo:
          type: string
        addressLineOne:
          type: string
        addressLineTwo:
          type: string
        city:
          type: string
        state:
          type: string
        pinCode:
          type: integer
        usage:
          $ref: '#/components/schemas/AddressUsageEnum'

    AccountUploadProofRequest:
      type: object
      required:
        - accountNumber
        - file
        - proofType
      properties:
        accountNumber:
          type: string
        file:
          type: string
          format: base64
        proofType:
          $ref: '#/components/schemas/AccountProofTypeEnum'

    AccountUploadProofResponse:
      type: object
      properties:
        message:
          type: string
        generatedPassword:
          type: string

    AccountSecurityResponse:
      type: object
      properties:
        message:
          type: string

    AccountAuthentication:
      type: object
      properties:
        accountNumber:
          type: string
        password:
          type: string

    AccountLoginResponse:
      type: object
      properties:
        accessToken:
          type: string
        message:
          type: string

    AccountBalanceResponse:
      type: object
      properties:
        availableBalance:
          type: integer
          format: int64

    AccountDetailsResponse:
      type: object
      properties:
        pdf:
          type: string

    JwtPayload:
      type: object
      properties:
        lastName:
          type: string
        accountNumber:
          type: string
        custId:
          type: integer
          format: int64
        mobileNumber:
          type: string
        accountType:
          type: string


    AccountTypeEnum:
      type: string
      enum: [SAVINGS, CURRENT, SALARY]

    AddressUsageEnum:
      type: string
      enum: [BRANCH, CUSTOMER]

    GenderEnum:
      type: string
      enum: [MALE, FEMALE, TRANSGENDER]

    AccountProofTypeEnum:
      type: string
      enum: [AADHAR, PAN, D]
